{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { products } from '../products';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/clipboard\";\nexport class ProductListComponent {\n  constructor(clipboard) {\n    this.clipboard = clipboard;\n    this.numLiked = new EventEmitter();\n    this.products = products;\n  }\n  share(link, destination) {\n    window.alert('The product has been shared!');\n    this.clipboard.copy(link);\n    window.open(destination);\n  }\n  onNotify() {\n    window.alert('You will be notified when the product goes on sale');\n  }\n  inList(category) {\n    for (let i of this.status) {\n      if (i.type == category) {\n        return true;\n      }\n    }\n    return false;\n  }\n  delete(product) {\n    product.visible = false;\n    if (product.liked) {\n      product.liked = false;\n      this.numLiked.emit(-1);\n    }\n  }\n  like(product) {\n    if (!product.liked) {\n      product.liked = true;\n      this.numLiked.emit(1);\n    } else {\n      product.liked = false;\n      this.numLiked.emit(-1);\n    }\n  }\n}\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.Clipboard));\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  inputs: {\n    status: \"status\"\n  },\n  outputs: {\n    numLiked: \"numLiked\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ProductListComponent_Template(rf, ctx) {},\n  styles: [\".block[_ngcontent-%COMP%]{\\r\\n    border:1px solid black;\\r\\n    padding: 10px;\\r\\n}\\r\\n.button[_ngcontent-%COMP%]{\\r\\n    margin: 5px 0;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdC1saXN0L3Byb2R1Y3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTs7OztDQUlDIiwic291cmNlc0NvbnRlbnQiOlsiLmJsb2Nre1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuLmJ1dHRvbntcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuLypcclxuQ29weXJpZ2h0IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcblVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXRcclxuY2FuIGJlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcclxuKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoCA,YAAY,QAAO,eAAe;AAEtE,SAASC,QAAQ,QAAiB,aAAa;;;AAQ/C,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,SAAoB;IAApB,cAAS,GAATA,SAAS;IAFnB,aAAQ,GAAG,IAAIJ,YAAY,EAAE;IACvC,aAAQ,GAAGC,QAAQ;EACwB;EAC3CI,KAAK,CAACC,IAAW,EAAEC,WAAkB;IACnCC,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC5C,IAAI,CAACL,SAAS,CAACM,IAAI,CAACJ,IAAI,CAAC;IACzBE,MAAM,CAACG,IAAI,CAACJ,WAAW,CAAC;EAC1B;EAEAK,QAAQ;IACNJ,MAAM,CAACC,KAAK,CAAC,oDAAoD,CAAC;EACpE;EAEAI,MAAM,CAACC,QAAe;IACpB,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACC,MAAM,EAAC;MACxB,IAAID,CAAC,CAACE,IAAI,IAAIH,QAAQ,EAAC;QACrB,OAAO,IAAI;;;IAGf,OAAO,KAAK;EACd;EAEAI,MAAM,CAACC,OAAe;IACpBA,OAAO,CAACC,OAAO,GAAC,KAAK;IACrB,IAAID,OAAO,CAACE,KAAK,EAAC;MAChBF,OAAO,CAACE,KAAK,GAAG,KAAK;MACrB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE1B;EAEAC,IAAI,CAACL,OAAe;IAClB,IAAI,CAACA,OAAO,CAACE,KAAK,EAAC;MACjBF,OAAO,CAACE,KAAK,GAAG,IAAI;MACpB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;KACtB,MACI;MACHJ,OAAO,CAACE,KAAK,GAAG,KAAK;MACrB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE1B;;AAzCWrB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;IAAAV;EAAA;EAAAW;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;AAAA","names":["EventEmitter","products","ProductListComponent","constructor","clipboard","share","link","destination","window","alert","copy","open","onNotify","inList","category","i","status","type","delete","product","visible","liked","numLiked","emit","like","selectors","inputs","outputs","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\aytzh\\WebstormProjects\\WEB-dev\\Lab5\\src\\app\\product-list\\product-list.component.ts"],"sourcesContent":["import { Component , Input, Output, EventEmitter} from '@angular/core';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { products, Product } from '../products';\r\nimport { Category } from '../categories';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  @Input() status !: Category[];\r\n  @Output() numLiked = new EventEmitter();\r\n  products = products;\r\n  constructor(private clipboard: Clipboard) {}\r\n  share(link:string, destination:string) {\r\n    window.alert('The product has been shared!');\r\n    this.clipboard.copy(link);\r\n    window.open(destination);\r\n  }\r\n\r\n  onNotify() {\r\n    window.alert('You will be notified when the product goes on sale');\r\n  }\r\n\r\n  inList(category:string){\r\n    for (let i of this.status){\r\n      if (i.type == category){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  delete(product:Product){\r\n    product.visible=false;\r\n    if (product.liked){\r\n      product.liked = false;\r\n      this.numLiked.emit(-1);\r\n    }\r\n  }\r\n\r\n  like(product:Product){\r\n    if (!product.liked){\r\n      product.liked = true;\r\n      this.numLiked.emit(1);\r\n    }\r\n    else {\r\n      product.liked = false;\r\n      this.numLiked.emit(-1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}